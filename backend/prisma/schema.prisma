// prisma/schema.prisma
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    email     String   @unique
    username  String   @unique
    password  String
    role      Role     @default(USER)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Relations
    quotes Quote[]
    votes  Vote[]

    @@map("users")
}

model Quote {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    content    String
    author     String?
    category   String?
    tags       String[]
    isActive   Boolean  @default(true)
    totalVotes Int      @default(0)
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    // Relations
    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String @db.ObjectId
    votes       Vote[]

    @@map("quotes")
}

model Vote {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    value     Int // 1 for upvote, -1 for downvote
    createdAt DateTime @default(now())

    // Relations
    user    User   @relation(fields: [userId], references: [id])
    userId  String @db.ObjectId
    quote   Quote  @relation(fields: [quoteId], references: [id])
    quoteId String @db.ObjectId

    // Ensure one vote per user per quote
    @@unique([userId, quoteId])
    @@map("votes")
}

enum Role {
    USER
    ADMIN
}
